using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WPF1
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }
    }


    // <StackPanel></StackPanel>  //размещает элементы в ряд по горизонтали или вертикали

    //Orientation="Horizontal" /позволяет задать способ отображения элементов (вертикаль, горизонталь)

    //<WrapPanel ItemHeight="30" ItemWidth="80"> //размещает элеаенты в горизонтальной или вертикальный ряд с переносом элементов

    //<DockPanel LastChildFill = "True">  //выравнивает элементы оп kраю контейнера

    //<Grid.ColumnDefinitions> //выстраивает элементы в строки и колонки невидимой таблицы
    // <RowDefinition>

    //Grid.ColumnSpan and grid.RowSpan - позволяют разместить элемент в нескольких смежных ячейках

    //HorizontalAlignment and VerticalAligment - определяют позиции дочернего элемента внутри контейнера, если есть доп пространство

    //Margin - добавляет некоторое пространство вокруг элемента (нельзя использовать как метод компоновки, разметка окна)

    //MinWidth/MaxWidth, MinHeight/MaxHeight - устранавливают макс и мин размеры элемента

    //<Grid.RowDefinitions Height = "Auto" /> - автоматические размеры
    //<Grid.RowDefinitions Height = "150" />  - абсолютные размеры (px, in, cm, pt)
    // пропорциональные рамеры - возможность задавать ширину или высоту одного столбца/строки в пропорции с другими столбцами/столбцами, отмечаются "*"

    //управление
    //Visibility="Hidden..." - позволяет задавать видимость элемента

    //FontStyle="Italic"  //свойства настройки шрифтов - позволяет настраивать отображение текста у элемента управления

    //свойства цветов Background - позволяет задать цвет фона элемента
    // Foreground - цвет текста элемента

    //BorderBrush - позволяет задать цвет обводки элемента, используется совместно со свойством Border

    //Элементы управления содержимым - это вид элементов управления, кот может хранить и отображать фрагмент содержимого (модет иметь еще один вложенный элемент)
    //может иметь только один элемент

    //Увсех эл упр содержимым етсь свойство Content, кот устанавливает сложенный элемент

    //Padding="50 30 0 40" Свойство отступа содержмого 

    //<Label>text<Label> - метка, для отображения небольшого объема
    //<TextBlock> TextWrapping="text" ... - перенос текста

    //Button - реагирует на клик/событие
    //Checkbox- флажок, кот можно установить ы три состояния: checked, Unchecked, Intermediate
    //RadioButton - переключатель снутри группы, объединяются одним именем и потом выбирается один из элементов

    //Всплывающте подсказки - ToolTip - позвляет добавить к элементам всплывающие подсказки 

    //Заголовки находятся в свойстве HeaderБ а сам элемент в свойстве Content: GroupBox, Expander, Tabltem

    //------------------------------------- 2 пара ---------------------------------------------------------

    //Текстовые элементы управления - в общем виде могут содержать только текст:

    //TextBlock (вывод текстовой информации содержимого элемента, может содержать вложенные элементы, для разбиения текста на составляющие
    //       LineHeilght - высота строк
    //       TextWrapping - перенос текста 
    //       TextAligment - выравнивание по центру, левому и правому краям

    //TextBox (предназначен для ввода и вывода текстовой информации, поддерживает все свойтсва TextBlock)
    //       MaxLength - задает максимальное число вводимых символов
    //       MaxLines and MinLines - определяет количество строк отображаемых в такстовом поле
    //       AccrptREturn - активировать переход на следующую строку при нажатии Enter
    //       AcceptTab - активация табуляции при нажатии Tab
    //       VerticalScrollBarVisibility and HorizontalScrollBarVisibility - отображают вертикаль и горизонталь прокрутки
    //       isReadOnly - блокировка редактирования во время прокрутки

    //RichTextBox - аналогичен textBox
    //PasswordBox - ввод парольной информаци, скрытие текста с помощью маски, не поддерживает работу с буфером обмена


    //Элемeнты управления списками -добавление элементов прямо в коллекцию items с помощью кода или XAML и
    // привязка данных - часто используется для работы с бд или другими внешними источниками

    //ListBox - создание списков переменной дляны, в которых пользователь может выбирать элементы
    //      SelectionMode - активирует множественный выбор 
    //ComboBox - отображение элемента в виде выпадающего списка
    //      IsSelected - выдкляет данный элемент выбранный при запуске приложения
    //      IsEnabled - устанавливает данный элемент недоаступным для выбора


    //Элементы выбора диапазона значений - данные элементы принимают числовое значение, которе находится в диапазоне между заданными минимальными и максимальными значениями 

    //Value - текущее значение элемента
    //MAximum and Minimum - верхний и нижний предел допустимых значений
    //SmallChange and LArgeChange - величина, на кот увеличивается или уменьшается значение свойства Value при изменении
    //Slider - ползунок позволяет устанавливать числовое згачение используя ползунок 
    //ProgressBar - индикатор прогресса
    //Calendar - свойства DisplayDateStart and DisplayDateEnd - начальная и конечная дата отображаемая в календаре
    //          DisplayMode - формат отображения дат (Month, Decade, Year)
    //          SelectionMode - определяет способ выделения дат
    //          DataPicer - ввод даты 

    //ScrollViewer - может вмещать в себя только один элемент, поэтому все элементы необходимо облачивать в еще один контейнер
    //      HorizontalScrollBarVisibility and VerticalScrollBarVisibility задают активность горизонтальной и вертикальной прокрутки
    //      CanContentScroll - активирует прокрутку по элементам (к началу следующего элемента)

    //Viewbox - может содержать один дочерний элемент и масштабирует его в зависимости от размеров окна
    //      Stretch -позволяет указать, как в занимаемой области должен масштабироваться дочерний элемент
    //      StretchDirection - указывает, какие операции разрешены

    //Image - работа с изображениями
    //TabControl - позволяет разделить интерфейс на несколько зон.  которые можно выбрать нажав на заголовок
    //ToolBar - панель инструментов: набор команд, обычно расположенный непосредственно под строкой меню в стандартном приложении винды
    //      WPFToolBar обычно помещаются внутри контейнера ToolBarTray - позволяет перемещать элементы пользователю

    //Menu - данный элемент служит для создания стандартных меню. Включает в себя MenuItem, в меню допускается делать кнопки
    //      ContextMenu - служит для создания контекстных всплывающих меню, отображающихся после нажатия на правую кнопку мыши. Сам по себе существовать не может
    //      





}